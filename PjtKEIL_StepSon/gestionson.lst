


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000                 EXPORT           CallbackSon
    4 00000000                 EXPORT           StartSon
    5 00000000                 import           Son
    6 00000000                 export           SortieSon
    7 00000000                 import           LongueurSon
    8 00000000                 include          DriverJeuLaser.inc
    1 00000000         
    2 00000000         ; Bibliotheque DriverJeuLaser (ancienne gassp72 adaptée 
                       2021 - TR)
    3 00000000         ; Accès en aux fonctions suivantes :
    4 00000000         ; GPIO :
    5 00000000         ; GPIOA_Set(char Broche), GPIOB_Set(char Broche), GPIOC_
                       Set(char Broche)
    6 00000000         ; GPIOA_Clear(char Broche), GPIOB_Clear(char Broche), GP
                       IOC_Clear(char Broche)
    7 00000000         
    8 00000000         ; PWM :
    9 00000000         ;/**
   10 00000000         ; * @brief  Fixe une valeur de PWM, Val, en tick horloge
                       . La rapport cyclique effectif
   11 00000000         ; * est donc : rcy = Thaut_ticks / Periode_ticks
   12 00000000         ; * @note   spécifique Jeu Laser, PWM liée exclusivement
                        au TIM3, chan3
   13 00000000         ; * @param  Thaut_ticks : durée de l'état haut d'une imp
                       ulsion en Ticks
   14 00000000         ;  * @retval None
   15 00000000         ; */
   16 00000000         
   17 00000000         ;void PWM_Set_Value_TIM3_Ch3( unsigned short int Thaut_t
                       icks);
   18 00000000                 import           PWM_Set_Value_TIM3_Ch3
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;/**
   23 00000000         ; * @brief  Mise à 1 d'une broche GPIO 
   24 00000000         ;  * @note   Une fonction par GPIO
   25 00000000         ; * @param  Broche : 0 à 15
   26 00000000         ; * @retval None
   27 00000000         ; */
   28 00000000         
   29 00000000         ;void GPIOA_Set(char Broche);
   30 00000000                 import           GPIOA_Set
   31 00000000         
   32 00000000         ;void GPIOB_Set(char Broche);
   33 00000000                 import           GPIOB_Set
   34 00000000         
   35 00000000         ;void GPIOC_Set(char Broche);
   36 00000000                 import           GPIOC_Set
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;/**
   41 00000000         ; * @brief  Mise à 0 d'une broche GPIO 
   42 00000000         ;  * @note   Une fonction par GPIO
   43 00000000         ; * @param  Broche : 0 à 15
   44 00000000         ; * @retval None



ARM Macro Assembler    Page 2 


   45 00000000         ;  */
   46 00000000         
   47 00000000         ;void GPIOA_Clear(char Broche);
   48 00000000                 import           GPIOA_Clear
   49 00000000         
   50 00000000         ;void GPIOB_Clear(char Broche);
   51 00000000                 import           GPIOB_Clear
   52 00000000         
   53 00000000         ;void GPIOC_Clear(char Broche);
   54 00000000                 import           GPIOC_Clear
   55 00000000         
   56 00000000                 end
    9 00000000         
   10 00000000         ; ====================== zone de réservation de données,
                         ======================================
   11 00000000         ;Section RAM (read only) :
   12 00000000                 area             mesdata,data,readonly
   13 00000000         
   14 00000000         
   15 00000000         ;Section RAM (read write):
   16 00000000                 area             maram,data,readwrite
   17 00000000         
   18 00000000 00000000 
                       index   dcd              0
   19 00000004 00000000 
                       SortieSon
                               dcd              0
   20 00000008         
   21 00000008         ; ======================================================
                       =========================================
   22 00000008         
   23 00000008         
   24 00000008         
   25 00000008         
   26 00000008         ;Section ROM code (read only) :  
   27 00000008                 area             moncode,code,readonly
   28 00000000         ; écrire le code ici  
   29 00000000         
   30 00000000         CallbackSon
                               proc
   31 00000000         
   32 00000000         
   33 00000000         
   34 00000000         ;initialisation des variables
   35 00000000 B410            push{r4}
   36 00000002 4913            LDR              R1,=Son
   37 00000004 4B13            LDR              R3,=index
   38 00000006         
   39 00000006 F8DF C050       LDR              R12,=LongueurSon
   40 0000000A F8DC C000       LDR              R12,[R12]
   41 0000000E 681A            LDR              R2,[R3]
   42 00000010         ; on regarde dans son a l'index donné 
   43 00000010 F931 0012       LDRSH            R0,[R1,R2,lsl#1]
   44 00000014         
   45 00000014 4562            CMP              R2,R12
   46 00000016         ;on regarde si on est en fin de "tableau"
   47 00000016 DA13            BGE              Fin
   48 00000018         ;incrementation de l'index
   49 00000018         ; R2 = R2 +1



ARM Macro Assembler    Page 3 


   50 00000018 F102 0201       ADD              R2,R2,#1
   51 0000001C         
   52 0000001C 601A            STR              R2,[R3]
   53 0000001E         ;on met R0 entre [0;719]
   54 0000001E         
   55 0000001E 490F            ldr              R1,=SortieSon
   56 00000020 F240 24CF       MOV              R4,#719
   57 00000024 F500 4000       ADD              R0,R0,#32768
   58 00000028 FB00 F004       MUL              R0,R0,R4
   59 0000002C EA4F 4020       ASR              R0,R0,#16
   60 00000030         
   61 00000030 6008            STR              R0,[R1]
   62 00000032 E92D 501F       push             {R0,R1,R2,R3,R4,R12,lr}
   63 00000036 F7FF FFFE       bl               PWM_Set_Value_TIM3_Ch3
   64 0000003A E8BD 501F       pop              {R0,R1,R2,R3,R4,R12,lr}
   65 0000003E BC10            pop{r4}
   66 00000040         
   67 00000040         Fin
   68 00000040         
   69 00000040         
   70 00000040         
   71 00000040         
   72 00000040         
   73 00000040 4770            bx               lr
   74 00000042         
   75 00000042                 endp
   76 00000042         
   77 00000042         
   78 00000042         StarSon proc
   79 00000042 4B04            LDR              R3,=index
   80 00000044 681A            LDR              R2,[R3]
   81 00000046 F04F 0200       MOV              R2,#0
   82 0000004A 601A            STR              R2,[R3]
   83 0000004C 4770            bx               lr
   84 0000004E                 endp
   85 0000004E         
   86 0000004E         
   87 0000004E         
   88 0000004E                 END
              00 00 00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\gestionson.d -o.\obj\gestionson.o -I.\Driver -I.\Src -I.\RTE
\_Simu -IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\
Programdata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine=
"__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION 
SETA 530" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --predef
ine="_RTE_ SETA 1" --list=gestionson.lst Src\GestionSon.s
